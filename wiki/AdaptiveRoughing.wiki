#summary Adaptive Roughing operation

= Introduction =

1. Make a solid with a big flat surface on top of it

2. Make a solid on top of it and/or a pocket in it

3. Rotate the view so that it is seen straight from the top and draw a sketch loosely around the pocket or the solid

4. Select the big flat solid and the sketch and, if you made some, the solids on the big flat solid.  You can, optionally, also select a cutting tool object.

5. Make an adaptive roughing operation, press

http://heekscnc.googlecode.com/svn/trunk/bitmaps/adapt.png

6. At the options list, on the left (as default), set the starting point somewhere in the middle of the pocket or somewhere not on the solid you made on the flat surface.

7. Create the NC code and see the toolpath, press

http://heekscnc.googlecode.com/svn/trunk/bitmaps/postprocess.png


There will be some toolpath.
If there is no toolpath, have a look in the terminal ( if running Linux ) to see if there are any Python script errors, like you haven't built actp.so

== Open Shapes ==
be careful to set the starting point somewhere not on the upper solids

http://heekscnc.googlecode.com/svn/wiki/adaptiveopen.png

try moving the starting point a bit

http://heekscnc.googlecode.com/svn/wiki/adaptiveopen2.png

== Pocketing ==
To specify a boundary that the tool must stay inside, you must use a solid, like this ( be careful to set the starting point somewhere in the middle of the pocket )

http://heekscnc.googlecode.com/svn/wiki/adaptivepocket.png

= Properties =
All operations have some common properties, see here:
http://code.google.com/p/heekscnc/wiki/Operations

===leadoffdz===
We don't know what this does

===leadofflen===
We don't know what this does

===leadoffrad===
We don't know what this does

===retractzheight===
I believe this is the 'safe height' at which rapid movements are safe.  The library code sets this to be 5 more than the highest point in the STL model.  The HeeksCNC code allows the operator to set this value manually.  When the model is first created, and again when the Python script is generated, the HeeksCNC code sets this to 5 more than the highest point in the chosen solids.  If the operator has already set it to a value higher than this then it will not be reset lower by the solids checking code.

===leadoffsamplestep===
We don't know what this does

===toolcornerrad===
This value is taken from the referenced CuttingTool object if one was selected during the AdaptiveRoughing object creation.  It represents the radius of the cutter from the bottom to the side.  A ball-endmill would have the corner radius as the same as the tool's radius.

===toolflatrad===
This value is taken from the referenced CuttingTool object if one was selected during the AdaptiveRoughing object creation.  It represents the radius of the circle at the bottom of the cutter before either the edge or the corner radius.  A normal endmill would have a flat radius that is the same as the radius of the whole tool.  It would therefore have a corner radius of zero.

===samplestep===
We don't know what this does

===stepdown===
This is the interval between successive 'z' machining levels.  This value should not be larger than the cutting tool's edge length.  It should also be noted that this stepdown value is used to determine how many machining levels are generated and that these levels will stop no lower than '5' above the solid's surface.  This means that the lowest maching level will be no less than 5 above the solid's surface and no more than '5 + stepdown' above the solid's surface.  i.e. the larger this value, the more of the cutting tool is used but, at the same time, the further away from the final solid's surface we will end up.

===clearcuspheight===
We don't know what this does.  As per the Adaptive Roughing code, the HeeksCNC package forces this value to 1/3 of the tool stepdown distance.

===triangleweaveres===
We don't know what this does

===flatradweaveres===
We don't know what this does

===dchangright===
We don't know what this does

===dchangrightoncontour===
We don't know what this does

===dchangleft===
We don't know what this does

===dchangefreespace===
We don't know what this does

===sidecutdisplch===
We don't know what this does.  My best guess is that this represents a 'Side Cut Displacement Change'.  I would suggest a value greater than zero but less than 1.0.  The ACTP library code gets a tool path vector as well as another vector that is perpendicular to the tool path.  This sidecutdisplch value is multiplied by the perpendicular vector and the result added to the old tool path vector.  The result of this produces the new tool path vector.  i.e. how much should we steer sideways while moving through the material.  The larger this value, the more aggressively the cutter would drive into the material (sideways).  Don't forget, this is just my best guess at the moment.  Please update this page if someone disagrees with this.

===fcut===
This represents the feedrate to be used during a cut.  It is added as an 'F' argument in the ACTP library code.

===fretract===
This represents the feedrate during a retraction from a cut.

===thintol===
This value is set to 0.0001 by default by the ACTP library code.  It represents a tolerance that determines when the cutting tool should deviate sideways into the material.  i.e. is the thickness of the material next to the cutter too small to worry about or is it beyond this thickness in which case the cutter should remove some of it.

===startpoint_x===
The start point x co-ordinate.  If either a point object or a drilling object is selected during the Adaptive object's creation, this value will be set based on its location.

===startpoint_y===
The start point y co-ordinate. If either a point object or a drilling object is selected during the Adaptive object's creation, this value will be set based on its location.

===startvel_x===
The start direction x

===startvel_y===
The start direction y

===minz===
The minz parameter may be used to ensure that machining stops before the top of the solid's surface.  If this parameter is only used if its value is larger than 5 more (hardcoded) than the solid's surface.

==== Determining machining levels ====
The Adaptive Roughing algorithm will produce machining sequences at levels that are determined using the following sequence;
 
 - first level will be half the stepdown distance from the top of the solid model (peak of the cones in the examples above)

 - the system will repeat at stepdown intervals as long as the levels do not penetrate deeper than '5' above the surface high point.  (the surface of the solid block in the example above)

If the user wants the machining to stop at some point higher than this '5 above surface' limit then they may set the minz parameter.


===boundaryclear===
The z height of the boundary. This should be a little above the solid.  This value is set, initially, based on the maximum Z value in the bounding boxes for the selected sketches.  The operator may change it manually.  The value is compared with the sketch objects again when the Python code is generated.  If the value has been set higher than that of the sketches it is not reset lower.  If, on the other hand, the value in the parameters is lower than that found for the sketches, its value is raised up to the sketches automatically.