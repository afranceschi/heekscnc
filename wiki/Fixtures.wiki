#summary Allow for multiple (rotated) vices and clamps

= Introduction =

== General ==

A fixture is used to physically attach raw material to an NC machine.  Fixtures include such items as vices and hold-down clamps.  In terms of HeeksCNC, however, they represent both a starting point and a measurement of how far off 'square' the raw material is from the three main axes of a machine.

To this end, a fixture object in HeeksCNC stores a coordinate system name (G54, G55, etc.) as well as three rotation values. These three rotation values indicate how 'tilted' each of the three planes are.  (i.e. XZ, YZ and XY).

When a piece of raw material is affixed to the NC machine, the operator may go through either one or two processes.  The first is to 'touch off' the raw material.  This is a process of telling the machine's controlling computer 'where' the raw material is.  This is done in terms of a coordinate system.  eg: They might set the current cutter location as the X=0, Y=0 and Z=0 point for the G54 coordinate system.

If they have two vices bolted to the NC machine, they may repeat this process so as to set the X,Y and Z values in terms of the G55 coordinate system.  One coordinate system assigned to each vice, for example.

The second setup step an operator may perform is to measure the raw material's rotation in any/all of the three planes of rotation.  (i.e. XY, YZ and XZ planes).  This process may be made easier with the use of the probing operations also available within HeeksCNC.

== Use of fixtures by HeeksCNC ==

The generation of GCode by HeeksCNC allows the graphical data to be translated into movement commands required to machine the raw material on the NC machine.  The fixture objects in the HeeksCNC model tell the software how many vices to expect when executing the gcode on the NC machine.  They also tell the HeeksCNC software how 'tilted' the raw material is with respect to each of the three planes of rotation.  The HeeksCNC software uses these rotation values to rotate the graphical elements during the production of the GCode.  The intent is that the resultant GCode will align correctly with the raw material during the machining operation.

== Fixture Types ==

=== Public Fixtures ===

HeeksCNC supports fixture objects in two separate contexts.  The first, and most common, is the use of 'public fixtures'.  These are fixture objects applied to the 'Fixtures' (plural) group in the main Program tree.

When GCode is generated for each machine operation, it does so within the context of each public fixture defined in the model.  This means that the machining operation is repeated once for each public fixture.  This is a simple form of part duplication.  i.e. where one data model its corresponding set of machine operations are defined and their gcode repeated for each public fixture.

=== Private Fixtures ===

Private fixture objects are simply fixture objects that are attached to individual machine operations.  They are added by using the right mouse button over an individual machine operation. Multiple machine operations may share common private fixtures but each machine operation may use only a single private fixture.

A private fixture allows an operator tighter control over which fixture each machine operation is applied to.

When a machine operation's GCode is generated, the software first checks to see if that machine operation has its own private fixture.  If so, the GCode is generated only once for that private fixture.  Such machine operations will NOT have their GCode generated for any of the public fixtures defined in the model.

=== Common Private Fixtures ===

Each time the 'add fixture' command is issued, independent of whether it's public or private, the HeeksCNC software assigns the next available coordinate system to the new fixture.  If the operator wants the same fixture assigned privately to two or more machine operations, they must update the newly added fixture's coordinate system in its properties window.  A sample workflow might be;

 - Right click on the first machine operation and select the 'Add Fixture' menu item.

 - Right click on the second machine operation and select the 'Add Fixture' menu item.

 - Select the private fixture just added to the second machine operation.

 - Update that fixture's properties such that the same coordinate system as the first opertion's fixture is chosen.  When the same coordinate system is chosen, the software searches for pre-existing fixture objects associated with that same coordinate system.  If found, it merges both fixture objects so that they represent the same fixture in memory.  The bennefit of this is that, if any axis rotation values are applied to that fixture, they will be used in all fixtures that share the same coordinate system number.


== Measuring a Fixture's rotation ==

The HeeksCNC Probing operations also support (for EMC2-based machines) the generation of an XML data file representing coordinate pairs of probed 'edges'.  These XML data files may be imported into a Fixture object from the 'Import Probe Data' menu item beneath the right mouse button.  This import sets the axis rotations based on the probed point locations.

=== Example Workflow - without importing XML data ===

- Generate a data model with NC operations added as necessary.

- Touch off against the material (physically) so that the machine's current coordinate system's origin is set correctly.

- Enter the material's rotation angle (found by probing) into the 'XY Plane Rotation' for the corresponding Fixture's coordinate system (G54 for example).

- Generate the GCode.

- Download it to the mill.

- Hold your hand over the Emergency Stop button just in case non of this stuff actually works.

- Run the program.


=== Example Workflow - using a touch probe ===

- Add an Edge Probing operation and set its various parameters.

- Use the right mouse button above the Edge Probing operation and select the 'Generate GCode' option.

- Move the GCode to the machine's controller.

- Place the raw material on the milling machine physically.

- Jog the touch probe's location to approximately above the edge to be probed.

- Execute the touch probe GCode program.

- Copy the resultant XML data file back to the HeeksCNC machine.  (NOTE: When using EMC2 as the machine's controller, the XML file is placed in the currently used configuration directory.  eg: "~/emc2/configs/HM50")

- Touch off against the material (physically) so that the machine's current coordinate system's origin is set correctly.

- Use the right mouse button above the Fixture object and select the 'Import Probe Data' option.  This sets the fixture's rotation based on the probed point locations.

- Generate the GCode.

- Download it to the mill.

- Hold your hand over the Emergency Stop button just in case non of this stuff actually works.

- Run the program.

= Default Fixtures =

If no fixtures are explicitly defined, the generated GCode will be added against a G54 coordinate system.

The application also has the ability to load a series of fixture data automatically during a 'File'->'New' command.  

A default fixtures table may be configured by saving a HeeksCNC data file that already contains a set of fixture definitions into a file called 'default.fixtures'. The process involves adding fixtures to a HeeksCNC model before using the 'Export' command beneath a right mouse click on the Fixtures icon. This allows the fixture definitions to be saved to a file. If the file is called 'default.fixtures' and is located in one of the two possible directories then these fixtures will be automatically added to all new data files.

The default.fixtures file may come from either the user's default configuration directory (HOME directory on Linux and "c:\Documents and Settings\username\Application Data" on Windows) or it must be located in the same directory as the HeeksCNC.so or HeeksCNC.DLL file.

= Properties =

== Coordinate System ==

This represents which coordinate system the generated GCode is aligned with.  The values include G54, G55, G56, G57, G58, G59, G59.1, G59.2 and G59.3

== Plane Rotations ==

The YZ, XZ and XY plane rotation values are measure in degrees.  These values determine the rotations that are applied to the generated GCode.

== Pivot Point ==

When a rotation is applied, this is the pivot point used.  A default value of 0,0,0 is used.

== Safety Height Defined ==

If this is checked 'true' then a Safety Height property is also included.  This Safety Height value is a Z value in machine coordinates (G53).  This value represents the safe height that ensures movement without hitting this fixture.  When the gcode switches from one coordinate system (and hence fixture) to another, it moves to the highest value of both fixture's Safety Height settings.